apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  MYSQL_ROOT_PASSWORD: root123
  MYSQL_DATABASE: iotProject
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1  # Should be 1 for MySQL to avoid data corruption
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql

    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_DATABASE
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-storage
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
  clusterIP: None  # Headless for better DNS within cluster if needed
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/iotProject?createDatabaseIfNotExist=true
  SPRING_DATASOURCE_USERNAME: root
  SPRING_DATASOURCE_PASSWORD: root123
  SERVER_PORT: "8080"
  SENSOR_API_BASE_URL: http://iot-backend:8080
  SENSOR_SCHEDULER_CRON: "0 */1 * * * *"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iot-backend
  template:
    metadata:
      labels:
        app: iot-backend
    spec:
      containers:
        - name: iot-backend
          image: ahmedyasser02/iotproject:v5.3
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: backend-config
---
apiVersion: v1
kind: Service
metadata:
  name: iot-backend
spec:
  selector:
    app: iot-backend
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30081  # add this for NodePort (optional)
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
data:
  API_BASE_URL: http://iot-backend:8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angular-frontend
  template:
    metadata:
      labels:
        app: angular-frontend
    spec:
      containers:
        - name: angular-frontend
          image: ahmedyasser02/my-angular-app:v4.5
          ports:
            - containerPort: 4200
          env:
            - name: API_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: API_BASE_URL
---
apiVersion: v1
kind: Service
metadata:
  name: angular-frontend
spec:
  selector:
    app: angular-frontend
  ports:
    - port: 4200        # external port on the node
      targetPort: 4200  # matches containerPort in deployment
  type: NodePort
